//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.CodeDom.Compiler;
using System.ComponentModel;
using System.Diagnostics;
using System.Runtime.Serialization;
using System.ServiceModel;
using System.ServiceModel.Channels;
using System.Threading.Tasks;

namespace SocialRequirements.CompanyService {
    
    
    [GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [ServiceContract(ConfigurationName="CompanyService.CompanySoap")]
    public interface CompanySoap {
        
        // CODEGEN: Generating message contract since element name GetCompanyTypesResult from namespace http://tempuri.org/ is not marked nillable
        [OperationContract(Action="http://tempuri.org/GetCompanyTypes", ReplyAction="*")]
        GetCompanyTypesResponse GetCompanyTypes(GetCompanyTypesRequest request);
        
        [OperationContract(Action="http://tempuri.org/GetCompanyTypes", ReplyAction="*")]
        Task<GetCompanyTypesResponse> GetCompanyTypesAsync(GetCompanyTypesRequest request);
        
        // CODEGEN: Generating message contract since element name name from namespace http://tempuri.org/ is not marked nillable
        [OperationContract(Action="http://tempuri.org/AddCompany", ReplyAction="*")]
        AddCompanyResponse AddCompany(AddCompanyRequest request);
        
        [OperationContract(Action="http://tempuri.org/AddCompany", ReplyAction="*")]
        Task<AddCompanyResponse> AddCompanyAsync(AddCompanyRequest request);
        
        [OperationContract(Action="http://tempuri.org/HaveRequirements", ReplyAction="*")]
        bool HaveRequirements(long companyId);
        
        [OperationContract(Action="http://tempuri.org/HaveRequirements", ReplyAction="*")]
        Task<bool> HaveRequirementsAsync(long companyId);
    }
    
    [DebuggerStepThrough()]
    [GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [EditorBrowsable(EditorBrowsableState.Advanced)]
    [MessageContract(IsWrapped=false)]
    public partial class GetCompanyTypesRequest {
        
        [MessageBodyMember(Name="GetCompanyTypes", Namespace="http://tempuri.org/", Order=0)]
        public GetCompanyTypesRequestBody Body;
        
        public GetCompanyTypesRequest() {
        }
        
        public GetCompanyTypesRequest(GetCompanyTypesRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [DebuggerStepThrough()]
    [GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [EditorBrowsable(EditorBrowsableState.Advanced)]
    [DataContract()]
    public partial class GetCompanyTypesRequestBody {
        
        public GetCompanyTypesRequestBody() {
        }
    }
    
    [DebuggerStepThrough()]
    [GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [EditorBrowsable(EditorBrowsableState.Advanced)]
    [MessageContract(IsWrapped=false)]
    public partial class GetCompanyTypesResponse {
        
        [MessageBodyMember(Name="GetCompanyTypesResponse", Namespace="http://tempuri.org/", Order=0)]
        public GetCompanyTypesResponseBody Body;
        
        public GetCompanyTypesResponse() {
        }
        
        public GetCompanyTypesResponse(GetCompanyTypesResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [DebuggerStepThrough()]
    [GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [EditorBrowsable(EditorBrowsableState.Advanced)]
    [DataContract(Namespace="http://tempuri.org/")]
    public partial class GetCompanyTypesResponseBody {
        
        [DataMember(EmitDefaultValue=false, Order=0)]
        public string GetCompanyTypesResult;
        
        public GetCompanyTypesResponseBody() {
        }
        
        public GetCompanyTypesResponseBody(string GetCompanyTypesResult) {
            this.GetCompanyTypesResult = GetCompanyTypesResult;
        }
    }
    
    [DebuggerStepThrough()]
    [GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [EditorBrowsable(EditorBrowsableState.Advanced)]
    [MessageContract(IsWrapped=false)]
    public partial class AddCompanyRequest {
        
        [MessageBodyMember(Name="AddCompany", Namespace="http://tempuri.org/", Order=0)]
        public AddCompanyRequestBody Body;
        
        public AddCompanyRequest() {
        }
        
        public AddCompanyRequest(AddCompanyRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [DebuggerStepThrough()]
    [GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [EditorBrowsable(EditorBrowsableState.Advanced)]
    [DataContract(Namespace="http://tempuri.org/")]
    public partial class AddCompanyRequestBody {
        
        [DataMember(EmitDefaultValue=false, Order=0)]
        public string name;
        
        [DataMember(Order=1)]
        public int type;
        
        [DataMember(EmitDefaultValue=false, Order=2)]
        public string encUsername;
        
        public AddCompanyRequestBody() {
        }
        
        public AddCompanyRequestBody(string name, int type, string encUsername) {
            this.name = name;
            this.type = type;
            this.encUsername = encUsername;
        }
    }
    
    [DebuggerStepThrough()]
    [GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [EditorBrowsable(EditorBrowsableState.Advanced)]
    [MessageContract(IsWrapped=false)]
    public partial class AddCompanyResponse {
        
        [MessageBodyMember(Name="AddCompanyResponse", Namespace="http://tempuri.org/", Order=0)]
        public AddCompanyResponseBody Body;
        
        public AddCompanyResponse() {
        }
        
        public AddCompanyResponse(AddCompanyResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [DebuggerStepThrough()]
    [GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [EditorBrowsable(EditorBrowsableState.Advanced)]
    [DataContract()]
    public partial class AddCompanyResponseBody {
        
        public AddCompanyResponseBody() {
        }
    }
    
    [GeneratedCode("System.ServiceModel", "4.0.0.0")]
    public interface CompanySoapChannel : CompanySoap, IClientChannel {
    }
    
    [DebuggerStepThrough()]
    [GeneratedCode("System.ServiceModel", "4.0.0.0")]
    public partial class CompanySoapClient : ClientBase<CompanySoap>, CompanySoap {
        
        public CompanySoapClient() {
        }
        
        public CompanySoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CompanySoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CompanySoapClient(string endpointConfigurationName, EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CompanySoapClient(Binding binding, EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        GetCompanyTypesResponse CompanySoap.GetCompanyTypes(GetCompanyTypesRequest request) {
            return base.Channel.GetCompanyTypes(request);
        }
        
        public string GetCompanyTypes() {
            GetCompanyTypesRequest inValue = new GetCompanyTypesRequest();
            inValue.Body = new GetCompanyTypesRequestBody();
            GetCompanyTypesResponse retVal = ((CompanySoap)(this)).GetCompanyTypes(inValue);
            return retVal.Body.GetCompanyTypesResult;
        }
        
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        Task<GetCompanyTypesResponse> CompanySoap.GetCompanyTypesAsync(GetCompanyTypesRequest request) {
            return base.Channel.GetCompanyTypesAsync(request);
        }
        
        public Task<GetCompanyTypesResponse> GetCompanyTypesAsync() {
            GetCompanyTypesRequest inValue = new GetCompanyTypesRequest();
            inValue.Body = new GetCompanyTypesRequestBody();
            return ((CompanySoap)(this)).GetCompanyTypesAsync(inValue);
        }
        
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        AddCompanyResponse CompanySoap.AddCompany(AddCompanyRequest request) {
            return base.Channel.AddCompany(request);
        }
        
        public void AddCompany(string name, int type, string encUsername) {
            AddCompanyRequest inValue = new AddCompanyRequest();
            inValue.Body = new AddCompanyRequestBody();
            inValue.Body.name = name;
            inValue.Body.type = type;
            inValue.Body.encUsername = encUsername;
            AddCompanyResponse retVal = ((CompanySoap)(this)).AddCompany(inValue);
        }
        
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        Task<AddCompanyResponse> CompanySoap.AddCompanyAsync(AddCompanyRequest request) {
            return base.Channel.AddCompanyAsync(request);
        }
        
        public Task<AddCompanyResponse> AddCompanyAsync(string name, int type, string encUsername) {
            AddCompanyRequest inValue = new AddCompanyRequest();
            inValue.Body = new AddCompanyRequestBody();
            inValue.Body.name = name;
            inValue.Body.type = type;
            inValue.Body.encUsername = encUsername;
            return ((CompanySoap)(this)).AddCompanyAsync(inValue);
        }
        
        public bool HaveRequirements(long companyId) {
            return base.Channel.HaveRequirements(companyId);
        }
        
        public Task<bool> HaveRequirementsAsync(long companyId) {
            return base.Channel.HaveRequirementsAsync(companyId);
        }
    }
}
