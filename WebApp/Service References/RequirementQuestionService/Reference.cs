//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SocialRequirements.RequirementQuestionService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="RequirementQuestionService.RequirementQuestionSoap")]
    public interface RequirementQuestionSoap {
        
        // CODEGEN: Generating message contract since element name question from namespace http://tempuri.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddQuestion", ReplyAction="*")]
        SocialRequirements.RequirementQuestionService.AddQuestionResponse AddQuestion(SocialRequirements.RequirementQuestionService.AddQuestionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddQuestion", ReplyAction="*")]
        System.Threading.Tasks.Task<SocialRequirements.RequirementQuestionService.AddQuestionResponse> AddQuestionAsync(SocialRequirements.RequirementQuestionService.AddQuestionRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddQuestionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="AddQuestion", Namespace="http://tempuri.org/", Order=0)]
        public SocialRequirements.RequirementQuestionService.AddQuestionRequestBody Body;
        
        public AddQuestionRequest() {
        }
        
        public AddQuestionRequest(SocialRequirements.RequirementQuestionService.AddQuestionRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class AddQuestionRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public long companyId;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public long projectId;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public long requirementId;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string question;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string encUsername;
        
        public AddQuestionRequestBody() {
        }
        
        public AddQuestionRequestBody(long companyId, long projectId, long requirementId, string question, string encUsername) {
            this.companyId = companyId;
            this.projectId = projectId;
            this.requirementId = requirementId;
            this.question = question;
            this.encUsername = encUsername;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddQuestionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="AddQuestionResponse", Namespace="http://tempuri.org/", Order=0)]
        public SocialRequirements.RequirementQuestionService.AddQuestionResponseBody Body;
        
        public AddQuestionResponse() {
        }
        
        public AddQuestionResponse(SocialRequirements.RequirementQuestionService.AddQuestionResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class AddQuestionResponseBody {
        
        public AddQuestionResponseBody() {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface RequirementQuestionSoapChannel : SocialRequirements.RequirementQuestionService.RequirementQuestionSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RequirementQuestionSoapClient : System.ServiceModel.ClientBase<SocialRequirements.RequirementQuestionService.RequirementQuestionSoap>, SocialRequirements.RequirementQuestionService.RequirementQuestionSoap {
        
        public RequirementQuestionSoapClient() {
        }
        
        public RequirementQuestionSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RequirementQuestionSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RequirementQuestionSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RequirementQuestionSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SocialRequirements.RequirementQuestionService.AddQuestionResponse SocialRequirements.RequirementQuestionService.RequirementQuestionSoap.AddQuestion(SocialRequirements.RequirementQuestionService.AddQuestionRequest request) {
            return base.Channel.AddQuestion(request);
        }
        
        public void AddQuestion(long companyId, long projectId, long requirementId, string question, string encUsername) {
            SocialRequirements.RequirementQuestionService.AddQuestionRequest inValue = new SocialRequirements.RequirementQuestionService.AddQuestionRequest();
            inValue.Body = new SocialRequirements.RequirementQuestionService.AddQuestionRequestBody();
            inValue.Body.companyId = companyId;
            inValue.Body.projectId = projectId;
            inValue.Body.requirementId = requirementId;
            inValue.Body.question = question;
            inValue.Body.encUsername = encUsername;
            SocialRequirements.RequirementQuestionService.AddQuestionResponse retVal = ((SocialRequirements.RequirementQuestionService.RequirementQuestionSoap)(this)).AddQuestion(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<SocialRequirements.RequirementQuestionService.AddQuestionResponse> SocialRequirements.RequirementQuestionService.RequirementQuestionSoap.AddQuestionAsync(SocialRequirements.RequirementQuestionService.AddQuestionRequest request) {
            return base.Channel.AddQuestionAsync(request);
        }
        
        public System.Threading.Tasks.Task<SocialRequirements.RequirementQuestionService.AddQuestionResponse> AddQuestionAsync(long companyId, long projectId, long requirementId, string question, string encUsername) {
            SocialRequirements.RequirementQuestionService.AddQuestionRequest inValue = new SocialRequirements.RequirementQuestionService.AddQuestionRequest();
            inValue.Body = new SocialRequirements.RequirementQuestionService.AddQuestionRequestBody();
            inValue.Body.companyId = companyId;
            inValue.Body.projectId = projectId;
            inValue.Body.requirementId = requirementId;
            inValue.Body.question = question;
            inValue.Body.encUsername = encUsername;
            return ((SocialRequirements.RequirementQuestionService.RequirementQuestionSoap)(this)).AddQuestionAsync(inValue);
        }
    }
}
