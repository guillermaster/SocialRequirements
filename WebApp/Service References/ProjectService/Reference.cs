//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.CodeDom.Compiler;
using System.ComponentModel;
using System.Diagnostics;
using System.Runtime.Serialization;
using System.ServiceModel;
using System.ServiceModel.Channels;
using System.Threading.Tasks;

namespace SocialRequirements.ProjectService {
    
    
    [GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [ServiceContract(ConfigurationName="ProjectService.ProjectSoap")]
    public interface ProjectSoap {
        
        // CODEGEN: Generating message contract since element name name from namespace http://tempuri.org/ is not marked nillable
        [OperationContract(Action="http://tempuri.org/AddProject", ReplyAction="*")]
        AddProjectResponse AddProject(AddProjectRequest request);
        
        [OperationContract(Action="http://tempuri.org/AddProject", ReplyAction="*")]
        Task<AddProjectResponse> AddProjectAsync(AddProjectRequest request);
    }
    
    [DebuggerStepThrough()]
    [GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [EditorBrowsable(EditorBrowsableState.Advanced)]
    [MessageContract(IsWrapped=false)]
    public partial class AddProjectRequest {
        
        [MessageBodyMember(Name="AddProject", Namespace="http://tempuri.org/", Order=0)]
        public AddProjectRequestBody Body;
        
        public AddProjectRequest() {
        }
        
        public AddProjectRequest(AddProjectRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [DebuggerStepThrough()]
    [GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [EditorBrowsable(EditorBrowsableState.Advanced)]
    [DataContract(Namespace="http://tempuri.org/")]
    public partial class AddProjectRequestBody {
        
        [DataMember(EmitDefaultValue=false, Order=0)]
        public string name;
        
        [DataMember(EmitDefaultValue=false, Order=1)]
        public string description;
        
        [DataMember(Order=2)]
        public long companyId;
        
        [DataMember(EmitDefaultValue=false, Order=3)]
        public string encUsername;
        
        public AddProjectRequestBody() {
        }
        
        public AddProjectRequestBody(string name, string description, long companyId, string encUsername) {
            this.name = name;
            this.description = description;
            this.companyId = companyId;
            this.encUsername = encUsername;
        }
    }
    
    [DebuggerStepThrough()]
    [GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [EditorBrowsable(EditorBrowsableState.Advanced)]
    [MessageContract(IsWrapped=false)]
    public partial class AddProjectResponse {
        
        [MessageBodyMember(Name="AddProjectResponse", Namespace="http://tempuri.org/", Order=0)]
        public AddProjectResponseBody Body;
        
        public AddProjectResponse() {
        }
        
        public AddProjectResponse(AddProjectResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [DebuggerStepThrough()]
    [GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [EditorBrowsable(EditorBrowsableState.Advanced)]
    [DataContract()]
    public partial class AddProjectResponseBody {
        
        public AddProjectResponseBody() {
        }
    }
    
    [GeneratedCode("System.ServiceModel", "4.0.0.0")]
    public interface ProjectSoapChannel : ProjectSoap, IClientChannel {
    }
    
    [DebuggerStepThrough()]
    [GeneratedCode("System.ServiceModel", "4.0.0.0")]
    public partial class ProjectSoapClient : ClientBase<ProjectSoap>, ProjectSoap {
        
        public ProjectSoapClient() {
        }
        
        public ProjectSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProjectSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProjectSoapClient(string endpointConfigurationName, EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProjectSoapClient(Binding binding, EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        AddProjectResponse ProjectSoap.AddProject(AddProjectRequest request) {
            return base.Channel.AddProject(request);
        }
        
        public void AddProject(string name, string description, long companyId, string encUsername) {
            AddProjectRequest inValue = new AddProjectRequest();
            inValue.Body = new AddProjectRequestBody();
            inValue.Body.name = name;
            inValue.Body.description = description;
            inValue.Body.companyId = companyId;
            inValue.Body.encUsername = encUsername;
            AddProjectResponse retVal = ((ProjectSoap)(this)).AddProject(inValue);
        }
        
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        Task<AddProjectResponse> ProjectSoap.AddProjectAsync(AddProjectRequest request) {
            return base.Channel.AddProjectAsync(request);
        }
        
        public Task<AddProjectResponse> AddProjectAsync(string name, string description, long companyId, string encUsername) {
            AddProjectRequest inValue = new AddProjectRequest();
            inValue.Body = new AddProjectRequestBody();
            inValue.Body.name = name;
            inValue.Body.description = description;
            inValue.Body.companyId = companyId;
            inValue.Body.encUsername = encUsername;
            return ((ProjectSoap)(this)).AddProjectAsync(inValue);
        }
    }
}
